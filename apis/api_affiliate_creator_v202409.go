/*
tiktok shop openapi

sdk for apis

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apis

import (
    "bytes"
    "context"
    "io"
    "net/http"
    "net/url"

    "github.com/Yuttachai-101/api_tiktok/models/affiliate_creator/v202409"
)


// AffiliateCreatorV202409APIService AffiliateCreatorV202409API service
type AffiliateCreatorV202409APIService service

type ApiAffiliateCreator202409SampleApplicationsFulfillmentsSearchPostRequest struct {
    ctx context.Context
    ApiService *AffiliateCreatorV202409APIService
    xTtsAccessToken *string
    contentType *string
    sortOrder *string
    sortField *string
    affiliateCreator202409CreatorSearchSampleApplicationFulfillmentsRequestBody *affiliate_creator_v202409.AffiliateCreator202409CreatorSearchSampleApplicationFulfillmentsRequestBody
}

// 
func (r ApiAffiliateCreator202409SampleApplicationsFulfillmentsSearchPostRequest) XTtsAccessToken(xTtsAccessToken string) ApiAffiliateCreator202409SampleApplicationsFulfillmentsSearchPostRequest {
    r.xTtsAccessToken = &xTtsAccessToken
    return r
}
// Allowed type: application/json
func (r ApiAffiliateCreator202409SampleApplicationsFulfillmentsSearchPostRequest) ContentType(contentType string) ApiAffiliateCreator202409SampleApplicationsFulfillmentsSearchPostRequest {
    r.contentType = &contentType
    return r
}
// The sort order for the field specified in the sort_field parameter.  Default: ASC Possible values: ASC: Ascending order DESC: Descending order
func (r ApiAffiliateCreator202409SampleApplicationsFulfillmentsSearchPostRequest) SortOrder(sortOrder string) ApiAffiliateCreator202409SampleApplicationsFulfillmentsSearchPostRequest {
    r.sortOrder = &sortOrder
    return r
}
// Some sorting fields are as follows: - expired_time: sort by left time to fulfill. - create_time: sort by fulfillment content create time. Default value  is expired_time.
func (r ApiAffiliateCreator202409SampleApplicationsFulfillmentsSearchPostRequest) SortField(sortField string) ApiAffiliateCreator202409SampleApplicationsFulfillmentsSearchPostRequest {
    r.sortField = &sortField
    return r
}
func (r ApiAffiliateCreator202409SampleApplicationsFulfillmentsSearchPostRequest) AffiliateCreator202409CreatorSearchSampleApplicationFulfillmentsRequestBody(affiliateCreator202409CreatorSearchSampleApplicationFulfillmentsRequestBody affiliate_creator_v202409.AffiliateCreator202409CreatorSearchSampleApplicationFulfillmentsRequestBody) ApiAffiliateCreator202409SampleApplicationsFulfillmentsSearchPostRequest {
    r.affiliateCreator202409CreatorSearchSampleApplicationFulfillmentsRequestBody = &affiliateCreator202409CreatorSearchSampleApplicationFulfillmentsRequestBody
    return r
}
func (r ApiAffiliateCreator202409SampleApplicationsFulfillmentsSearchPostRequest) Execute() (*affiliate_creator_v202409.AffiliateCreator202409CreatorSearchSampleApplicationFulfillmentsResponse, *http.Response, error) {
    return r.ApiService.AffiliateCreator202409SampleApplicationsFulfillmentsSearchPostExecute(r)
}

/*
AffiliateCreator202409SampleApplicationsFulfillmentsSearchPost CreatorSearchSampleApplicationFulfillments
You, the creator, can use this API to query the fulfillment status for the received sample applications.

@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
@return ApiAffiliateCreator202409SampleApplicationsFulfillmentsSearchPostRequest
*/
func (a *AffiliateCreatorV202409APIService) AffiliateCreator202409SampleApplicationsFulfillmentsSearchPost(ctx context.Context) ApiAffiliateCreator202409SampleApplicationsFulfillmentsSearchPostRequest {
    return ApiAffiliateCreator202409SampleApplicationsFulfillmentsSearchPostRequest{
        ApiService: a,
        ctx: ctx,
    }
}

// Execute executes the request
//  @return AffiliateCreator202409CreatorSearchSampleApplicationFulfillmentsResponse
func (a *AffiliateCreatorV202409APIService) AffiliateCreator202409SampleApplicationsFulfillmentsSearchPostExecute(r ApiAffiliateCreator202409SampleApplicationsFulfillmentsSearchPostRequest) (*affiliate_creator_v202409.AffiliateCreator202409CreatorSearchSampleApplicationFulfillmentsResponse, *http.Response, error) {
    var (
        localVarHTTPMethod   = http.MethodPost
        localVarPostBody     interface{}
        formFiles            []formFile
        localVarReturnValue  *affiliate_creator_v202409.AffiliateCreator202409CreatorSearchSampleApplicationFulfillmentsResponse
    )

    localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "AffiliateCreatorV202409APIService.AffiliateCreator202409SampleApplicationsFulfillmentsSearchPost")
    if err != nil {
        return localVarReturnValue, nil, &GenericOpenAPIError{error: err.Error()}
    }

    localVarPath := localBasePath + "/affiliate_creator/202409/sample_applications/fulfillments/search"

    localVarHeaderParams := make(map[string]string)
    localVarQueryParams := url.Values{}
    localVarFormParams := url.Values{}
    if r.xTtsAccessToken == nil {
        return localVarReturnValue, nil, reportError("xTtsAccessToken is required and must be specified")
    }
    if r.contentType == nil {
        return localVarReturnValue, nil, reportError("contentType is required and must be specified")
    }

    if r.sortOrder != nil {
    parameterAddToHeaderOrQuery(localVarQueryParams, "sort_order", r.sortOrder, "")
    }
    if r.sortField != nil {
    parameterAddToHeaderOrQuery(localVarQueryParams, "sort_field", r.sortField, "")
    }
    // to determine the Content-Type header
    localVarHTTPContentTypes := []string{"application/json"}

    // set Content-Type header
    localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
    if localVarHTTPContentType != "" {
        localVarHeaderParams["Content-Type"] = localVarHTTPContentType
    }

    // to determine the Accept header
    localVarHTTPHeaderAccepts := []string{"application/json"}

    // set Accept header
    localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
    if localVarHTTPHeaderAccept != "" {
        localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
    }
    parameterAddToHeaderOrQuery(localVarHeaderParams, "x-tts-access-token", r.xTtsAccessToken, "")
    parameterAddToHeaderOrQuery(localVarHeaderParams, "Content-Type", r.contentType, "")
    // body params
    localVarPostBody = r.affiliateCreator202409CreatorSearchSampleApplicationFulfillmentsRequestBody
    req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, formFiles)
    if err != nil {
        return localVarReturnValue, nil, err
    }

    localVarHTTPResponse, err := a.client.callAPI(req)
    if err != nil || localVarHTTPResponse == nil {
        return localVarReturnValue, localVarHTTPResponse, err
    }

    localVarBody, err := io.ReadAll(localVarHTTPResponse.Body)
    localVarHTTPResponse.Body.Close()
    localVarHTTPResponse.Body = io.NopCloser(bytes.NewBuffer(localVarBody))
    if err != nil {
        return localVarReturnValue, localVarHTTPResponse, err
    }

    if localVarHTTPResponse.StatusCode >= 300 {
        newErr := &GenericOpenAPIError{
            body:  localVarBody,
            error: localVarHTTPResponse.Status,
        }
        return localVarReturnValue, localVarHTTPResponse, newErr
    }

    err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
    if err != nil {
        newErr := &GenericOpenAPIError{
            body:  localVarBody,
            error: err.Error(),
        }
        return localVarReturnValue, localVarHTTPResponse, newErr
    }

    return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiAffiliateCreator202409ShowcasesProductsDeleteRequest struct {
    ctx context.Context
    ApiService *AffiliateCreatorV202409APIService
    xTtsAccessToken *string
    contentType *string
    affiliateCreator202409RemoveShowcaseProductsRequestBody *affiliate_creator_v202409.AffiliateCreator202409RemoveShowcaseProductsRequestBody
}

// 
func (r ApiAffiliateCreator202409ShowcasesProductsDeleteRequest) XTtsAccessToken(xTtsAccessToken string) ApiAffiliateCreator202409ShowcasesProductsDeleteRequest {
    r.xTtsAccessToken = &xTtsAccessToken
    return r
}
// Allowed type: application/json
func (r ApiAffiliateCreator202409ShowcasesProductsDeleteRequest) ContentType(contentType string) ApiAffiliateCreator202409ShowcasesProductsDeleteRequest {
    r.contentType = &contentType
    return r
}
func (r ApiAffiliateCreator202409ShowcasesProductsDeleteRequest) AffiliateCreator202409RemoveShowcaseProductsRequestBody(affiliateCreator202409RemoveShowcaseProductsRequestBody affiliate_creator_v202409.AffiliateCreator202409RemoveShowcaseProductsRequestBody) ApiAffiliateCreator202409ShowcasesProductsDeleteRequest {
    r.affiliateCreator202409RemoveShowcaseProductsRequestBody = &affiliateCreator202409RemoveShowcaseProductsRequestBody
    return r
}
func (r ApiAffiliateCreator202409ShowcasesProductsDeleteRequest) Execute() (*affiliate_creator_v202409.AffiliateCreator202409RemoveShowcaseProductsResponse, *http.Response, error) {
    return r.ApiService.AffiliateCreator202409ShowcasesProductsDeleteExecute(r)
}

/*
AffiliateCreator202409ShowcasesProductsDelete RemoveShowcaseProducts
This API removes the products in the creator's showcase.
The platform will return error code and error message if the deletion fails.

@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
@return ApiAffiliateCreator202409ShowcasesProductsDeleteRequest
*/
func (a *AffiliateCreatorV202409APIService) AffiliateCreator202409ShowcasesProductsDelete(ctx context.Context) ApiAffiliateCreator202409ShowcasesProductsDeleteRequest {
    return ApiAffiliateCreator202409ShowcasesProductsDeleteRequest{
        ApiService: a,
        ctx: ctx,
    }
}

// Execute executes the request
//  @return AffiliateCreator202409RemoveShowcaseProductsResponse
func (a *AffiliateCreatorV202409APIService) AffiliateCreator202409ShowcasesProductsDeleteExecute(r ApiAffiliateCreator202409ShowcasesProductsDeleteRequest) (*affiliate_creator_v202409.AffiliateCreator202409RemoveShowcaseProductsResponse, *http.Response, error) {
    var (
        localVarHTTPMethod   = http.MethodDelete
        localVarPostBody     interface{}
        formFiles            []formFile
        localVarReturnValue  *affiliate_creator_v202409.AffiliateCreator202409RemoveShowcaseProductsResponse
    )

    localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "AffiliateCreatorV202409APIService.AffiliateCreator202409ShowcasesProductsDelete")
    if err != nil {
        return localVarReturnValue, nil, &GenericOpenAPIError{error: err.Error()}
    }

    localVarPath := localBasePath + "/affiliate_creator/202409/showcases/products"

    localVarHeaderParams := make(map[string]string)
    localVarQueryParams := url.Values{}
    localVarFormParams := url.Values{}
    if r.xTtsAccessToken == nil {
        return localVarReturnValue, nil, reportError("xTtsAccessToken is required and must be specified")
    }
    if r.contentType == nil {
        return localVarReturnValue, nil, reportError("contentType is required and must be specified")
    }

    // to determine the Content-Type header
    localVarHTTPContentTypes := []string{"application/json"}

    // set Content-Type header
    localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
    if localVarHTTPContentType != "" {
        localVarHeaderParams["Content-Type"] = localVarHTTPContentType
    }

    // to determine the Accept header
    localVarHTTPHeaderAccepts := []string{"application/json"}

    // set Accept header
    localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
    if localVarHTTPHeaderAccept != "" {
        localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
    }
    parameterAddToHeaderOrQuery(localVarHeaderParams, "x-tts-access-token", r.xTtsAccessToken, "")
    parameterAddToHeaderOrQuery(localVarHeaderParams, "Content-Type", r.contentType, "")
    // body params
    localVarPostBody = r.affiliateCreator202409RemoveShowcaseProductsRequestBody
    req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, formFiles)
    if err != nil {
        return localVarReturnValue, nil, err
    }

    localVarHTTPResponse, err := a.client.callAPI(req)
    if err != nil || localVarHTTPResponse == nil {
        return localVarReturnValue, localVarHTTPResponse, err
    }

    localVarBody, err := io.ReadAll(localVarHTTPResponse.Body)
    localVarHTTPResponse.Body.Close()
    localVarHTTPResponse.Body = io.NopCloser(bytes.NewBuffer(localVarBody))
    if err != nil {
        return localVarReturnValue, localVarHTTPResponse, err
    }

    if localVarHTTPResponse.StatusCode >= 300 {
        newErr := &GenericOpenAPIError{
            body:  localVarBody,
            error: localVarHTTPResponse.Status,
        }
        return localVarReturnValue, localVarHTTPResponse, newErr
    }

    err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
    if err != nil {
        newErr := &GenericOpenAPIError{
            body:  localVarBody,
            error: err.Error(),
        }
        return localVarReturnValue, localVarHTTPResponse, newErr
    }

    return localVarReturnValue, localVarHTTPResponse, nil
}

type ApiAffiliateCreator202409ShowcasesProductsTopPostRequest struct {
    ctx context.Context
    ApiService *AffiliateCreatorV202409APIService
    xTtsAccessToken *string
    contentType *string
    affiliateCreator202409TopShowcaseProductsRequestBody *affiliate_creator_v202409.AffiliateCreator202409TopShowcaseProductsRequestBody
}

// 
func (r ApiAffiliateCreator202409ShowcasesProductsTopPostRequest) XTtsAccessToken(xTtsAccessToken string) ApiAffiliateCreator202409ShowcasesProductsTopPostRequest {
    r.xTtsAccessToken = &xTtsAccessToken
    return r
}
// Allowed type: application/json
func (r ApiAffiliateCreator202409ShowcasesProductsTopPostRequest) ContentType(contentType string) ApiAffiliateCreator202409ShowcasesProductsTopPostRequest {
    r.contentType = &contentType
    return r
}
func (r ApiAffiliateCreator202409ShowcasesProductsTopPostRequest) AffiliateCreator202409TopShowcaseProductsRequestBody(affiliateCreator202409TopShowcaseProductsRequestBody affiliate_creator_v202409.AffiliateCreator202409TopShowcaseProductsRequestBody) ApiAffiliateCreator202409ShowcasesProductsTopPostRequest {
    r.affiliateCreator202409TopShowcaseProductsRequestBody = &affiliateCreator202409TopShowcaseProductsRequestBody
    return r
}
func (r ApiAffiliateCreator202409ShowcasesProductsTopPostRequest) Execute() (*affiliate_creator_v202409.AffiliateCreator202409TopShowcaseProductsResponse, *http.Response, error) {
    return r.ApiService.AffiliateCreator202409ShowcasesProductsTopPostExecute(r)
}

/*
AffiliateCreator202409ShowcasesProductsTopPost TopShowcaseProducts
Use this API to move products to the top in a creator's showcase.
The platform will return the error code and error message if the pinning operation fails.

@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
@return ApiAffiliateCreator202409ShowcasesProductsTopPostRequest
*/
func (a *AffiliateCreatorV202409APIService) AffiliateCreator202409ShowcasesProductsTopPost(ctx context.Context) ApiAffiliateCreator202409ShowcasesProductsTopPostRequest {
    return ApiAffiliateCreator202409ShowcasesProductsTopPostRequest{
        ApiService: a,
        ctx: ctx,
    }
}

// Execute executes the request
//  @return AffiliateCreator202409TopShowcaseProductsResponse
func (a *AffiliateCreatorV202409APIService) AffiliateCreator202409ShowcasesProductsTopPostExecute(r ApiAffiliateCreator202409ShowcasesProductsTopPostRequest) (*affiliate_creator_v202409.AffiliateCreator202409TopShowcaseProductsResponse, *http.Response, error) {
    var (
        localVarHTTPMethod   = http.MethodPost
        localVarPostBody     interface{}
        formFiles            []formFile
        localVarReturnValue  *affiliate_creator_v202409.AffiliateCreator202409TopShowcaseProductsResponse
    )

    localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "AffiliateCreatorV202409APIService.AffiliateCreator202409ShowcasesProductsTopPost")
    if err != nil {
        return localVarReturnValue, nil, &GenericOpenAPIError{error: err.Error()}
    }

    localVarPath := localBasePath + "/affiliate_creator/202409/showcases/products/top"

    localVarHeaderParams := make(map[string]string)
    localVarQueryParams := url.Values{}
    localVarFormParams := url.Values{}
    if r.xTtsAccessToken == nil {
        return localVarReturnValue, nil, reportError("xTtsAccessToken is required and must be specified")
    }
    if r.contentType == nil {
        return localVarReturnValue, nil, reportError("contentType is required and must be specified")
    }

    // to determine the Content-Type header
    localVarHTTPContentTypes := []string{"application/json"}

    // set Content-Type header
    localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
    if localVarHTTPContentType != "" {
        localVarHeaderParams["Content-Type"] = localVarHTTPContentType
    }

    // to determine the Accept header
    localVarHTTPHeaderAccepts := []string{"application/json"}

    // set Accept header
    localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
    if localVarHTTPHeaderAccept != "" {
        localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
    }
    parameterAddToHeaderOrQuery(localVarHeaderParams, "x-tts-access-token", r.xTtsAccessToken, "")
    parameterAddToHeaderOrQuery(localVarHeaderParams, "Content-Type", r.contentType, "")
    // body params
    localVarPostBody = r.affiliateCreator202409TopShowcaseProductsRequestBody
    req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, formFiles)
    if err != nil {
        return localVarReturnValue, nil, err
    }

    localVarHTTPResponse, err := a.client.callAPI(req)
    if err != nil || localVarHTTPResponse == nil {
        return localVarReturnValue, localVarHTTPResponse, err
    }

    localVarBody, err := io.ReadAll(localVarHTTPResponse.Body)
    localVarHTTPResponse.Body.Close()
    localVarHTTPResponse.Body = io.NopCloser(bytes.NewBuffer(localVarBody))
    if err != nil {
        return localVarReturnValue, localVarHTTPResponse, err
    }

    if localVarHTTPResponse.StatusCode >= 300 {
        newErr := &GenericOpenAPIError{
            body:  localVarBody,
            error: localVarHTTPResponse.Status,
        }
        return localVarReturnValue, localVarHTTPResponse, newErr
    }

    err = a.client.decode(&localVarReturnValue, localVarBody, localVarHTTPResponse.Header.Get("Content-Type"))
    if err != nil {
        newErr := &GenericOpenAPIError{
            body:  localVarBody,
            error: err.Error(),
        }
        return localVarReturnValue, localVarHTTPResponse, newErr
    }

    return localVarReturnValue, localVarHTTPResponse, nil
}
