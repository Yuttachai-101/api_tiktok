/*
tiktok shop openapi

sdk for apis

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package affiliate_seller_v202409

import (
    "encoding/json"
    "github.com/Yuttachai-101/api_tiktok/utils"
)

            // checks if the AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications{}

// AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications struct for AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications
type AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications struct {
    // The expire time for a seller to approve a sample application.
    ApproveExpirationTime *int64 `json:"approve_expiration_time,omitempty"`
    // The remaining stock quota of a sample product.
    AvailableQuantity *int32 `json:"available_quantity,omitempty"`
    // The commission rate for this product is set by merchants for creators. - The range of this value is [0.01, 0.8].
    CommissionRate *string `json:"commission_rate,omitempty"`
    Creator *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplicationsCreator `json:"creator,omitempty"`
    // The reasons why can not approve the sample application
    DisapprovableReasons []string `json:"disapprovable_reasons,omitempty"`
    // It indicates the current status of the fulfillment process. The possible values are: - PENDING: The creator is yet to fulfill the content creation obligation. - ONGOING: Fulfillment is in progress; content has been created and is being evaluated against criteria. - SUCCEED: Fulfillment has been successfully completed; the content meets the required standards. - FAILED: Fulfillment failed; the content did not meet the required standards. - OVERDUE: Fulfillment is overdue; the creator did not meet the deadline. - SUSPEND: Fulfillment has been suspended. - CANCELLED: Fulfillment has been cancelled, either by the creator or due to operational reasons. - EXEMPTED: The creator has been exempted from the fulfillment obligation.
    FulfillmentStatus *string `json:"fulfillment_status,omitempty"`
    // The unique id of sample request application ID
    Id *string `json:"id,omitempty"`
    // The sample application can be approved or not.
    IsApprovable *bool `json:"is_approvable,omitempty"`
    // The sample order is generated after the sample application is approved by seller
    OrderId *string `json:"order_id,omitempty"`
    // The name of the partner if the sample application is submitted on behalf of a creator by an agency. It is only populated when an agency handles the application process instead of the creator directly.
    PartnerName *string `json:"partner_name,omitempty"`
    Product *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplicationsProduct `json:"product,omitempty"`
    // The deadline for a seller to ship a sample for a sample application.
    ShipmentExpirationTime *int64 `json:"shipment_expiration_time,omitempty"`
    // The status of sample applications. The possible enumerated values are: - PENDING: The sample application is waiting for the seller's review. - AWAITING_SHIPMENT: The application is approved, and the seller needs to ship the sample. - SHIPPED: The sample has been shipped by the seller and is waiting for the creator to receive the package. - CONTENT_PENDING: The creator has received the sample package and is expected to create content. - REJECT_CANCELLED: The sample application has been rejected by the seller. - OVERDUE_CANCELLED: The sample application has expired due to being overdue. - UNFULFILL_CANCELLED: The creator did not fulfill the commitment to create content within the agreed timeframe. - DEL_OPEN_COLLAB: The open collaboration plan has been deleted. - SELLER_NOT_SHIP_CANCELLED: The seller did not ship the sample within the required timeframe. - WITHDRAW_CANCELLED: The creator withdrew the sample application before the seller approved it. - UNFULFILLABLE_CANCELLED: The application was cancelled due to reasons beyond the creator's control, making it impossible to create content. - OPS_CANCELLED: The application was manually cancelled by operations staff. - OPS_FAILED: The application was marked as failed by operations staff. - OPS_COMPLETED: The application was manually marked as completed by operations staff. - COMPLETED: The application is complete, and the creator has finished creating the content.
    Status *string `json:"status,omitempty"`
    // The logistics tracking number for the sample application order
    TrackingNumber *string `json:"tracking_number,omitempty"`
}

// NewAffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications instantiates a new AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications() *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications {
    this := AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications{}
    return &this
}

// NewAffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplicationsWithDefaults instantiates a new AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplicationsWithDefaults() *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications {
    this := AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications{}
    return &this
}

// GetApproveExpirationTime returns the ApproveExpirationTime field value if set, zero value otherwise.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) GetApproveExpirationTime() int64 {
    if o == nil || utils.IsNil(o.ApproveExpirationTime) {
        var ret int64
        return ret
    }
    return *o.ApproveExpirationTime
}

// GetApproveExpirationTimeOk returns a tuple with the ApproveExpirationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) GetApproveExpirationTimeOk() (*int64, bool) {
    if o == nil || utils.IsNil(o.ApproveExpirationTime) {
        return nil, false
    }
    return o.ApproveExpirationTime, true
}

// HasApproveExpirationTime returns a boolean if a field has been set.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) HasApproveExpirationTime() bool {
    if o != nil && !utils.IsNil(o.ApproveExpirationTime) {
        return true
    }

    return false
}

// SetApproveExpirationTime gets a reference to the given int64 and assigns it to the ApproveExpirationTime field.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) SetApproveExpirationTime(v int64) {
    o.ApproveExpirationTime = &v
}

// GetAvailableQuantity returns the AvailableQuantity field value if set, zero value otherwise.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) GetAvailableQuantity() int32 {
    if o == nil || utils.IsNil(o.AvailableQuantity) {
        var ret int32
        return ret
    }
    return *o.AvailableQuantity
}

// GetAvailableQuantityOk returns a tuple with the AvailableQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) GetAvailableQuantityOk() (*int32, bool) {
    if o == nil || utils.IsNil(o.AvailableQuantity) {
        return nil, false
    }
    return o.AvailableQuantity, true
}

// HasAvailableQuantity returns a boolean if a field has been set.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) HasAvailableQuantity() bool {
    if o != nil && !utils.IsNil(o.AvailableQuantity) {
        return true
    }

    return false
}

// SetAvailableQuantity gets a reference to the given int32 and assigns it to the AvailableQuantity field.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) SetAvailableQuantity(v int32) {
    o.AvailableQuantity = &v
}

// GetCommissionRate returns the CommissionRate field value if set, zero value otherwise.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) GetCommissionRate() string {
    if o == nil || utils.IsNil(o.CommissionRate) {
        var ret string
        return ret
    }
    return *o.CommissionRate
}

// GetCommissionRateOk returns a tuple with the CommissionRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) GetCommissionRateOk() (*string, bool) {
    if o == nil || utils.IsNil(o.CommissionRate) {
        return nil, false
    }
    return o.CommissionRate, true
}

// HasCommissionRate returns a boolean if a field has been set.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) HasCommissionRate() bool {
    if o != nil && !utils.IsNil(o.CommissionRate) {
        return true
    }

    return false
}

// SetCommissionRate gets a reference to the given string and assigns it to the CommissionRate field.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) SetCommissionRate(v string) {
    o.CommissionRate = &v
}

// GetCreator returns the Creator field value if set, zero value otherwise.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) GetCreator() AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplicationsCreator {
    if o == nil || utils.IsNil(o.Creator) {
        var ret AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplicationsCreator
        return ret
    }
    return *o.Creator
}

// GetCreatorOk returns a tuple with the Creator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) GetCreatorOk() (*AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplicationsCreator, bool) {
    if o == nil || utils.IsNil(o.Creator) {
        return nil, false
    }
    return o.Creator, true
}

// HasCreator returns a boolean if a field has been set.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) HasCreator() bool {
    if o != nil && !utils.IsNil(o.Creator) {
        return true
    }

    return false
}

// SetCreator gets a reference to the given AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplicationsCreator and assigns it to the Creator field.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) SetCreator(v AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplicationsCreator) {
    o.Creator = &v
}

// GetDisapprovableReasons returns the DisapprovableReasons field value if set, zero value otherwise.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) GetDisapprovableReasons() []string {
    if o == nil || utils.IsNil(o.DisapprovableReasons) {
        var ret []string
        return ret
    }
    return o.DisapprovableReasons
}

// GetDisapprovableReasonsOk returns a tuple with the DisapprovableReasons field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) GetDisapprovableReasonsOk() ([]string, bool) {
    if o == nil || utils.IsNil(o.DisapprovableReasons) {
        return nil, false
    }
    return o.DisapprovableReasons, true
}

// HasDisapprovableReasons returns a boolean if a field has been set.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) HasDisapprovableReasons() bool {
    if o != nil && !utils.IsNil(o.DisapprovableReasons) {
        return true
    }

    return false
}

// SetDisapprovableReasons gets a reference to the given []string and assigns it to the DisapprovableReasons field.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) SetDisapprovableReasons(v []string) {
    o.DisapprovableReasons = v
}

// GetFulfillmentStatus returns the FulfillmentStatus field value if set, zero value otherwise.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) GetFulfillmentStatus() string {
    if o == nil || utils.IsNil(o.FulfillmentStatus) {
        var ret string
        return ret
    }
    return *o.FulfillmentStatus
}

// GetFulfillmentStatusOk returns a tuple with the FulfillmentStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) GetFulfillmentStatusOk() (*string, bool) {
    if o == nil || utils.IsNil(o.FulfillmentStatus) {
        return nil, false
    }
    return o.FulfillmentStatus, true
}

// HasFulfillmentStatus returns a boolean if a field has been set.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) HasFulfillmentStatus() bool {
    if o != nil && !utils.IsNil(o.FulfillmentStatus) {
        return true
    }

    return false
}

// SetFulfillmentStatus gets a reference to the given string and assigns it to the FulfillmentStatus field.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) SetFulfillmentStatus(v string) {
    o.FulfillmentStatus = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) GetId() string {
    if o == nil || utils.IsNil(o.Id) {
        var ret string
        return ret
    }
    return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) GetIdOk() (*string, bool) {
    if o == nil || utils.IsNil(o.Id) {
        return nil, false
    }
    return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) HasId() bool {
    if o != nil && !utils.IsNil(o.Id) {
        return true
    }

    return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) SetId(v string) {
    o.Id = &v
}

// GetIsApprovable returns the IsApprovable field value if set, zero value otherwise.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) GetIsApprovable() bool {
    if o == nil || utils.IsNil(o.IsApprovable) {
        var ret bool
        return ret
    }
    return *o.IsApprovable
}

// GetIsApprovableOk returns a tuple with the IsApprovable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) GetIsApprovableOk() (*bool, bool) {
    if o == nil || utils.IsNil(o.IsApprovable) {
        return nil, false
    }
    return o.IsApprovable, true
}

// HasIsApprovable returns a boolean if a field has been set.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) HasIsApprovable() bool {
    if o != nil && !utils.IsNil(o.IsApprovable) {
        return true
    }

    return false
}

// SetIsApprovable gets a reference to the given bool and assigns it to the IsApprovable field.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) SetIsApprovable(v bool) {
    o.IsApprovable = &v
}

// GetOrderId returns the OrderId field value if set, zero value otherwise.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) GetOrderId() string {
    if o == nil || utils.IsNil(o.OrderId) {
        var ret string
        return ret
    }
    return *o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) GetOrderIdOk() (*string, bool) {
    if o == nil || utils.IsNil(o.OrderId) {
        return nil, false
    }
    return o.OrderId, true
}

// HasOrderId returns a boolean if a field has been set.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) HasOrderId() bool {
    if o != nil && !utils.IsNil(o.OrderId) {
        return true
    }

    return false
}

// SetOrderId gets a reference to the given string and assigns it to the OrderId field.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) SetOrderId(v string) {
    o.OrderId = &v
}

// GetPartnerName returns the PartnerName field value if set, zero value otherwise.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) GetPartnerName() string {
    if o == nil || utils.IsNil(o.PartnerName) {
        var ret string
        return ret
    }
    return *o.PartnerName
}

// GetPartnerNameOk returns a tuple with the PartnerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) GetPartnerNameOk() (*string, bool) {
    if o == nil || utils.IsNil(o.PartnerName) {
        return nil, false
    }
    return o.PartnerName, true
}

// HasPartnerName returns a boolean if a field has been set.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) HasPartnerName() bool {
    if o != nil && !utils.IsNil(o.PartnerName) {
        return true
    }

    return false
}

// SetPartnerName gets a reference to the given string and assigns it to the PartnerName field.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) SetPartnerName(v string) {
    o.PartnerName = &v
}

// GetProduct returns the Product field value if set, zero value otherwise.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) GetProduct() AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplicationsProduct {
    if o == nil || utils.IsNil(o.Product) {
        var ret AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplicationsProduct
        return ret
    }
    return *o.Product
}

// GetProductOk returns a tuple with the Product field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) GetProductOk() (*AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplicationsProduct, bool) {
    if o == nil || utils.IsNil(o.Product) {
        return nil, false
    }
    return o.Product, true
}

// HasProduct returns a boolean if a field has been set.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) HasProduct() bool {
    if o != nil && !utils.IsNil(o.Product) {
        return true
    }

    return false
}

// SetProduct gets a reference to the given AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplicationsProduct and assigns it to the Product field.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) SetProduct(v AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplicationsProduct) {
    o.Product = &v
}

// GetShipmentExpirationTime returns the ShipmentExpirationTime field value if set, zero value otherwise.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) GetShipmentExpirationTime() int64 {
    if o == nil || utils.IsNil(o.ShipmentExpirationTime) {
        var ret int64
        return ret
    }
    return *o.ShipmentExpirationTime
}

// GetShipmentExpirationTimeOk returns a tuple with the ShipmentExpirationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) GetShipmentExpirationTimeOk() (*int64, bool) {
    if o == nil || utils.IsNil(o.ShipmentExpirationTime) {
        return nil, false
    }
    return o.ShipmentExpirationTime, true
}

// HasShipmentExpirationTime returns a boolean if a field has been set.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) HasShipmentExpirationTime() bool {
    if o != nil && !utils.IsNil(o.ShipmentExpirationTime) {
        return true
    }

    return false
}

// SetShipmentExpirationTime gets a reference to the given int64 and assigns it to the ShipmentExpirationTime field.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) SetShipmentExpirationTime(v int64) {
    o.ShipmentExpirationTime = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) GetStatus() string {
    if o == nil || utils.IsNil(o.Status) {
        var ret string
        return ret
    }
    return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) GetStatusOk() (*string, bool) {
    if o == nil || utils.IsNil(o.Status) {
        return nil, false
    }
    return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) HasStatus() bool {
    if o != nil && !utils.IsNil(o.Status) {
        return true
    }

    return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) SetStatus(v string) {
    o.Status = &v
}

// GetTrackingNumber returns the TrackingNumber field value if set, zero value otherwise.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) GetTrackingNumber() string {
    if o == nil || utils.IsNil(o.TrackingNumber) {
        var ret string
        return ret
    }
    return *o.TrackingNumber
}

// GetTrackingNumberOk returns a tuple with the TrackingNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) GetTrackingNumberOk() (*string, bool) {
    if o == nil || utils.IsNil(o.TrackingNumber) {
        return nil, false
    }
    return o.TrackingNumber, true
}

// HasTrackingNumber returns a boolean if a field has been set.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) HasTrackingNumber() bool {
    if o != nil && !utils.IsNil(o.TrackingNumber) {
        return true
    }

    return false
}

// SetTrackingNumber gets a reference to the given string and assigns it to the TrackingNumber field.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) SetTrackingNumber(v string) {
    o.TrackingNumber = &v
}

func (o AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) MarshalJSON() ([]byte, error) {
    toSerialize,err := o.ToMap()
    if err != nil {
        return []byte{}, err
    }
    return json.Marshal(toSerialize)
}

func (o AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) ToMap() (map[string]interface{}, error) {
    toSerialize := map[string]interface{}{}
    if !utils.IsNil(o.ApproveExpirationTime) {
        toSerialize["approve_expiration_time"] = o.ApproveExpirationTime
    }
    if !utils.IsNil(o.AvailableQuantity) {
        toSerialize["available_quantity"] = o.AvailableQuantity
    }
    if !utils.IsNil(o.CommissionRate) {
        toSerialize["commission_rate"] = o.CommissionRate
    }
    if !utils.IsNil(o.Creator) {
        toSerialize["creator"] = o.Creator
    }
    if !utils.IsNil(o.DisapprovableReasons) {
        toSerialize["disapprovable_reasons"] = o.DisapprovableReasons
    }
    if !utils.IsNil(o.FulfillmentStatus) {
        toSerialize["fulfillment_status"] = o.FulfillmentStatus
    }
    if !utils.IsNil(o.Id) {
        toSerialize["id"] = o.Id
    }
    if !utils.IsNil(o.IsApprovable) {
        toSerialize["is_approvable"] = o.IsApprovable
    }
    if !utils.IsNil(o.OrderId) {
        toSerialize["order_id"] = o.OrderId
    }
    if !utils.IsNil(o.PartnerName) {
        toSerialize["partner_name"] = o.PartnerName
    }
    if !utils.IsNil(o.Product) {
        toSerialize["product"] = o.Product
    }
    if !utils.IsNil(o.ShipmentExpirationTime) {
        toSerialize["shipment_expiration_time"] = o.ShipmentExpirationTime
    }
    if !utils.IsNil(o.Status) {
        toSerialize["status"] = o.Status
    }
    if !utils.IsNil(o.TrackingNumber) {
        toSerialize["tracking_number"] = o.TrackingNumber
    }
    return toSerialize, nil
}

type NullableAffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications struct {
	value *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications
	isSet bool
}

func (v NullableAffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) Get() *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications {
	return v.value
}

func (v *NullableAffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) Set(val *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) {
	v.value = val
	v.isSet = true
}

func (v NullableAffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) IsSet() bool {
	return v.isSet
}

func (v *NullableAffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications(val *AffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) *NullableAffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications {
	return &NullableAffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications{value: val, isSet: true}
}

func (v NullableAffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAffiliateSeller202409SellerSearchSampleApplicationsResponseDataSampleApplications) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


