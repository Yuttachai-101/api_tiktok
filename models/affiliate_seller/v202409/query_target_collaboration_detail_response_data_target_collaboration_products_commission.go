/*
tiktok shop openapi

sdk for apis

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package affiliate_seller_v202409

import (
    "encoding/json"
    "github.com/Yuttachai-101/api_tiktok/utils"
)

            // checks if the AffiliateSeller202409QueryTargetCollaborationDetailResponseDataTargetCollaborationProductsCommission type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &AffiliateSeller202409QueryTargetCollaborationDetailResponseDataTargetCollaborationProductsCommission{}

// AffiliateSeller202409QueryTargetCollaborationDetailResponseDataTargetCollaborationProductsCommission struct for AffiliateSeller202409QueryTargetCollaborationDetailResponseDataTargetCollaborationProductsCommission
type AffiliateSeller202409QueryTargetCollaborationDetailResponseDataTargetCollaborationProductsCommission struct {
    // The currency code.
    Currency *string `json:"currency,omitempty"`
    // Commission effective time. It is a timestamp. 
    EffectiveTime *string `json:"effective_time,omitempty"`
    // The maximum estimated commission amount for all SKUs of this product.
    MaximumAmount *string `json:"maximum_amount,omitempty"`
    // The minimum estimated commission amount for all SKUs of this product.
    MinimumAmount *string `json:"minimum_amount,omitempty"`
    // The commission rate in hundredths of a pecent. For example, 3587 is a commission rate of 35.87%. This value must a minimum of 1000.  The range of this value is [100, 8000].
    Rate *int64 `json:"rate,omitempty"`
}

// NewAffiliateSeller202409QueryTargetCollaborationDetailResponseDataTargetCollaborationProductsCommission instantiates a new AffiliateSeller202409QueryTargetCollaborationDetailResponseDataTargetCollaborationProductsCommission object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAffiliateSeller202409QueryTargetCollaborationDetailResponseDataTargetCollaborationProductsCommission() *AffiliateSeller202409QueryTargetCollaborationDetailResponseDataTargetCollaborationProductsCommission {
    this := AffiliateSeller202409QueryTargetCollaborationDetailResponseDataTargetCollaborationProductsCommission{}
    return &this
}

// NewAffiliateSeller202409QueryTargetCollaborationDetailResponseDataTargetCollaborationProductsCommissionWithDefaults instantiates a new AffiliateSeller202409QueryTargetCollaborationDetailResponseDataTargetCollaborationProductsCommission object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAffiliateSeller202409QueryTargetCollaborationDetailResponseDataTargetCollaborationProductsCommissionWithDefaults() *AffiliateSeller202409QueryTargetCollaborationDetailResponseDataTargetCollaborationProductsCommission {
    this := AffiliateSeller202409QueryTargetCollaborationDetailResponseDataTargetCollaborationProductsCommission{}
    return &this
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *AffiliateSeller202409QueryTargetCollaborationDetailResponseDataTargetCollaborationProductsCommission) GetCurrency() string {
    if o == nil || utils.IsNil(o.Currency) {
        var ret string
        return ret
    }
    return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AffiliateSeller202409QueryTargetCollaborationDetailResponseDataTargetCollaborationProductsCommission) GetCurrencyOk() (*string, bool) {
    if o == nil || utils.IsNil(o.Currency) {
        return nil, false
    }
    return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *AffiliateSeller202409QueryTargetCollaborationDetailResponseDataTargetCollaborationProductsCommission) HasCurrency() bool {
    if o != nil && !utils.IsNil(o.Currency) {
        return true
    }

    return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *AffiliateSeller202409QueryTargetCollaborationDetailResponseDataTargetCollaborationProductsCommission) SetCurrency(v string) {
    o.Currency = &v
}

// GetEffectiveTime returns the EffectiveTime field value if set, zero value otherwise.
func (o *AffiliateSeller202409QueryTargetCollaborationDetailResponseDataTargetCollaborationProductsCommission) GetEffectiveTime() string {
    if o == nil || utils.IsNil(o.EffectiveTime) {
        var ret string
        return ret
    }
    return *o.EffectiveTime
}

// GetEffectiveTimeOk returns a tuple with the EffectiveTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AffiliateSeller202409QueryTargetCollaborationDetailResponseDataTargetCollaborationProductsCommission) GetEffectiveTimeOk() (*string, bool) {
    if o == nil || utils.IsNil(o.EffectiveTime) {
        return nil, false
    }
    return o.EffectiveTime, true
}

// HasEffectiveTime returns a boolean if a field has been set.
func (o *AffiliateSeller202409QueryTargetCollaborationDetailResponseDataTargetCollaborationProductsCommission) HasEffectiveTime() bool {
    if o != nil && !utils.IsNil(o.EffectiveTime) {
        return true
    }

    return false
}

// SetEffectiveTime gets a reference to the given string and assigns it to the EffectiveTime field.
func (o *AffiliateSeller202409QueryTargetCollaborationDetailResponseDataTargetCollaborationProductsCommission) SetEffectiveTime(v string) {
    o.EffectiveTime = &v
}

// GetMaximumAmount returns the MaximumAmount field value if set, zero value otherwise.
func (o *AffiliateSeller202409QueryTargetCollaborationDetailResponseDataTargetCollaborationProductsCommission) GetMaximumAmount() string {
    if o == nil || utils.IsNil(o.MaximumAmount) {
        var ret string
        return ret
    }
    return *o.MaximumAmount
}

// GetMaximumAmountOk returns a tuple with the MaximumAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AffiliateSeller202409QueryTargetCollaborationDetailResponseDataTargetCollaborationProductsCommission) GetMaximumAmountOk() (*string, bool) {
    if o == nil || utils.IsNil(o.MaximumAmount) {
        return nil, false
    }
    return o.MaximumAmount, true
}

// HasMaximumAmount returns a boolean if a field has been set.
func (o *AffiliateSeller202409QueryTargetCollaborationDetailResponseDataTargetCollaborationProductsCommission) HasMaximumAmount() bool {
    if o != nil && !utils.IsNil(o.MaximumAmount) {
        return true
    }

    return false
}

// SetMaximumAmount gets a reference to the given string and assigns it to the MaximumAmount field.
func (o *AffiliateSeller202409QueryTargetCollaborationDetailResponseDataTargetCollaborationProductsCommission) SetMaximumAmount(v string) {
    o.MaximumAmount = &v
}

// GetMinimumAmount returns the MinimumAmount field value if set, zero value otherwise.
func (o *AffiliateSeller202409QueryTargetCollaborationDetailResponseDataTargetCollaborationProductsCommission) GetMinimumAmount() string {
    if o == nil || utils.IsNil(o.MinimumAmount) {
        var ret string
        return ret
    }
    return *o.MinimumAmount
}

// GetMinimumAmountOk returns a tuple with the MinimumAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AffiliateSeller202409QueryTargetCollaborationDetailResponseDataTargetCollaborationProductsCommission) GetMinimumAmountOk() (*string, bool) {
    if o == nil || utils.IsNil(o.MinimumAmount) {
        return nil, false
    }
    return o.MinimumAmount, true
}

// HasMinimumAmount returns a boolean if a field has been set.
func (o *AffiliateSeller202409QueryTargetCollaborationDetailResponseDataTargetCollaborationProductsCommission) HasMinimumAmount() bool {
    if o != nil && !utils.IsNil(o.MinimumAmount) {
        return true
    }

    return false
}

// SetMinimumAmount gets a reference to the given string and assigns it to the MinimumAmount field.
func (o *AffiliateSeller202409QueryTargetCollaborationDetailResponseDataTargetCollaborationProductsCommission) SetMinimumAmount(v string) {
    o.MinimumAmount = &v
}

// GetRate returns the Rate field value if set, zero value otherwise.
func (o *AffiliateSeller202409QueryTargetCollaborationDetailResponseDataTargetCollaborationProductsCommission) GetRate() int64 {
    if o == nil || utils.IsNil(o.Rate) {
        var ret int64
        return ret
    }
    return *o.Rate
}

// GetRateOk returns a tuple with the Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AffiliateSeller202409QueryTargetCollaborationDetailResponseDataTargetCollaborationProductsCommission) GetRateOk() (*int64, bool) {
    if o == nil || utils.IsNil(o.Rate) {
        return nil, false
    }
    return o.Rate, true
}

// HasRate returns a boolean if a field has been set.
func (o *AffiliateSeller202409QueryTargetCollaborationDetailResponseDataTargetCollaborationProductsCommission) HasRate() bool {
    if o != nil && !utils.IsNil(o.Rate) {
        return true
    }

    return false
}

// SetRate gets a reference to the given int64 and assigns it to the Rate field.
func (o *AffiliateSeller202409QueryTargetCollaborationDetailResponseDataTargetCollaborationProductsCommission) SetRate(v int64) {
    o.Rate = &v
}

func (o AffiliateSeller202409QueryTargetCollaborationDetailResponseDataTargetCollaborationProductsCommission) MarshalJSON() ([]byte, error) {
    toSerialize,err := o.ToMap()
    if err != nil {
        return []byte{}, err
    }
    return json.Marshal(toSerialize)
}

func (o AffiliateSeller202409QueryTargetCollaborationDetailResponseDataTargetCollaborationProductsCommission) ToMap() (map[string]interface{}, error) {
    toSerialize := map[string]interface{}{}
    if !utils.IsNil(o.Currency) {
        toSerialize["currency"] = o.Currency
    }
    if !utils.IsNil(o.EffectiveTime) {
        toSerialize["effective_time"] = o.EffectiveTime
    }
    if !utils.IsNil(o.MaximumAmount) {
        toSerialize["maximum_amount"] = o.MaximumAmount
    }
    if !utils.IsNil(o.MinimumAmount) {
        toSerialize["minimum_amount"] = o.MinimumAmount
    }
    if !utils.IsNil(o.Rate) {
        toSerialize["rate"] = o.Rate
    }
    return toSerialize, nil
}

type NullableAffiliateSeller202409QueryTargetCollaborationDetailResponseDataTargetCollaborationProductsCommission struct {
	value *AffiliateSeller202409QueryTargetCollaborationDetailResponseDataTargetCollaborationProductsCommission
	isSet bool
}

func (v NullableAffiliateSeller202409QueryTargetCollaborationDetailResponseDataTargetCollaborationProductsCommission) Get() *AffiliateSeller202409QueryTargetCollaborationDetailResponseDataTargetCollaborationProductsCommission {
	return v.value
}

func (v *NullableAffiliateSeller202409QueryTargetCollaborationDetailResponseDataTargetCollaborationProductsCommission) Set(val *AffiliateSeller202409QueryTargetCollaborationDetailResponseDataTargetCollaborationProductsCommission) {
	v.value = val
	v.isSet = true
}

func (v NullableAffiliateSeller202409QueryTargetCollaborationDetailResponseDataTargetCollaborationProductsCommission) IsSet() bool {
	return v.isSet
}

func (v *NullableAffiliateSeller202409QueryTargetCollaborationDetailResponseDataTargetCollaborationProductsCommission) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAffiliateSeller202409QueryTargetCollaborationDetailResponseDataTargetCollaborationProductsCommission(val *AffiliateSeller202409QueryTargetCollaborationDetailResponseDataTargetCollaborationProductsCommission) *NullableAffiliateSeller202409QueryTargetCollaborationDetailResponseDataTargetCollaborationProductsCommission {
	return &NullableAffiliateSeller202409QueryTargetCollaborationDetailResponseDataTargetCollaborationProductsCommission{value: val, isSet: true}
}

func (v NullableAffiliateSeller202409QueryTargetCollaborationDetailResponseDataTargetCollaborationProductsCommission) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAffiliateSeller202409QueryTargetCollaborationDetailResponseDataTargetCollaborationProductsCommission) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


