/*
tiktok shop openapi

sdk for apis

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package affiliate_seller_v202409

import (
    "encoding/json"
    "github.com/Yuttachai-101/api_tiktok/utils"
)

            // checks if the AffiliateSeller202409SellerSearchSampleApplicationsFulfillmentsResponseDataFulfillments type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &AffiliateSeller202409SellerSearchSampleApplicationsFulfillmentsResponseDataFulfillments{}

// AffiliateSeller202409SellerSearchSampleApplicationsFulfillmentsResponseDataFulfillments struct for AffiliateSeller202409SellerSearchSampleApplicationsFulfillmentsResponseDataFulfillments
type AffiliateSeller202409SellerSearchSampleApplicationsFulfillmentsResponseDataFulfillments struct {
    Content *AffiliateSeller202409SellerSearchSampleApplicationsFulfillmentsResponseDataFulfillmentsContent `json:"content,omitempty"`
    Product *AffiliateSeller202409SellerSearchSampleApplicationsFulfillmentsResponseDataFulfillmentsProduct `json:"product,omitempty"`
}

// NewAffiliateSeller202409SellerSearchSampleApplicationsFulfillmentsResponseDataFulfillments instantiates a new AffiliateSeller202409SellerSearchSampleApplicationsFulfillmentsResponseDataFulfillments object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAffiliateSeller202409SellerSearchSampleApplicationsFulfillmentsResponseDataFulfillments() *AffiliateSeller202409SellerSearchSampleApplicationsFulfillmentsResponseDataFulfillments {
    this := AffiliateSeller202409SellerSearchSampleApplicationsFulfillmentsResponseDataFulfillments{}
    return &this
}

// NewAffiliateSeller202409SellerSearchSampleApplicationsFulfillmentsResponseDataFulfillmentsWithDefaults instantiates a new AffiliateSeller202409SellerSearchSampleApplicationsFulfillmentsResponseDataFulfillments object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAffiliateSeller202409SellerSearchSampleApplicationsFulfillmentsResponseDataFulfillmentsWithDefaults() *AffiliateSeller202409SellerSearchSampleApplicationsFulfillmentsResponseDataFulfillments {
    this := AffiliateSeller202409SellerSearchSampleApplicationsFulfillmentsResponseDataFulfillments{}
    return &this
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsFulfillmentsResponseDataFulfillments) GetContent() AffiliateSeller202409SellerSearchSampleApplicationsFulfillmentsResponseDataFulfillmentsContent {
    if o == nil || utils.IsNil(o.Content) {
        var ret AffiliateSeller202409SellerSearchSampleApplicationsFulfillmentsResponseDataFulfillmentsContent
        return ret
    }
    return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsFulfillmentsResponseDataFulfillments) GetContentOk() (*AffiliateSeller202409SellerSearchSampleApplicationsFulfillmentsResponseDataFulfillmentsContent, bool) {
    if o == nil || utils.IsNil(o.Content) {
        return nil, false
    }
    return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsFulfillmentsResponseDataFulfillments) HasContent() bool {
    if o != nil && !utils.IsNil(o.Content) {
        return true
    }

    return false
}

// SetContent gets a reference to the given AffiliateSeller202409SellerSearchSampleApplicationsFulfillmentsResponseDataFulfillmentsContent and assigns it to the Content field.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsFulfillmentsResponseDataFulfillments) SetContent(v AffiliateSeller202409SellerSearchSampleApplicationsFulfillmentsResponseDataFulfillmentsContent) {
    o.Content = &v
}

// GetProduct returns the Product field value if set, zero value otherwise.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsFulfillmentsResponseDataFulfillments) GetProduct() AffiliateSeller202409SellerSearchSampleApplicationsFulfillmentsResponseDataFulfillmentsProduct {
    if o == nil || utils.IsNil(o.Product) {
        var ret AffiliateSeller202409SellerSearchSampleApplicationsFulfillmentsResponseDataFulfillmentsProduct
        return ret
    }
    return *o.Product
}

// GetProductOk returns a tuple with the Product field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsFulfillmentsResponseDataFulfillments) GetProductOk() (*AffiliateSeller202409SellerSearchSampleApplicationsFulfillmentsResponseDataFulfillmentsProduct, bool) {
    if o == nil || utils.IsNil(o.Product) {
        return nil, false
    }
    return o.Product, true
}

// HasProduct returns a boolean if a field has been set.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsFulfillmentsResponseDataFulfillments) HasProduct() bool {
    if o != nil && !utils.IsNil(o.Product) {
        return true
    }

    return false
}

// SetProduct gets a reference to the given AffiliateSeller202409SellerSearchSampleApplicationsFulfillmentsResponseDataFulfillmentsProduct and assigns it to the Product field.
func (o *AffiliateSeller202409SellerSearchSampleApplicationsFulfillmentsResponseDataFulfillments) SetProduct(v AffiliateSeller202409SellerSearchSampleApplicationsFulfillmentsResponseDataFulfillmentsProduct) {
    o.Product = &v
}

func (o AffiliateSeller202409SellerSearchSampleApplicationsFulfillmentsResponseDataFulfillments) MarshalJSON() ([]byte, error) {
    toSerialize,err := o.ToMap()
    if err != nil {
        return []byte{}, err
    }
    return json.Marshal(toSerialize)
}

func (o AffiliateSeller202409SellerSearchSampleApplicationsFulfillmentsResponseDataFulfillments) ToMap() (map[string]interface{}, error) {
    toSerialize := map[string]interface{}{}
    if !utils.IsNil(o.Content) {
        toSerialize["content"] = o.Content
    }
    if !utils.IsNil(o.Product) {
        toSerialize["product"] = o.Product
    }
    return toSerialize, nil
}

type NullableAffiliateSeller202409SellerSearchSampleApplicationsFulfillmentsResponseDataFulfillments struct {
	value *AffiliateSeller202409SellerSearchSampleApplicationsFulfillmentsResponseDataFulfillments
	isSet bool
}

func (v NullableAffiliateSeller202409SellerSearchSampleApplicationsFulfillmentsResponseDataFulfillments) Get() *AffiliateSeller202409SellerSearchSampleApplicationsFulfillmentsResponseDataFulfillments {
	return v.value
}

func (v *NullableAffiliateSeller202409SellerSearchSampleApplicationsFulfillmentsResponseDataFulfillments) Set(val *AffiliateSeller202409SellerSearchSampleApplicationsFulfillmentsResponseDataFulfillments) {
	v.value = val
	v.isSet = true
}

func (v NullableAffiliateSeller202409SellerSearchSampleApplicationsFulfillmentsResponseDataFulfillments) IsSet() bool {
	return v.isSet
}

func (v *NullableAffiliateSeller202409SellerSearchSampleApplicationsFulfillmentsResponseDataFulfillments) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAffiliateSeller202409SellerSearchSampleApplicationsFulfillmentsResponseDataFulfillments(val *AffiliateSeller202409SellerSearchSampleApplicationsFulfillmentsResponseDataFulfillments) *NullableAffiliateSeller202409SellerSearchSampleApplicationsFulfillmentsResponseDataFulfillments {
	return &NullableAffiliateSeller202409SellerSearchSampleApplicationsFulfillmentsResponseDataFulfillments{value: val, isSet: true}
}

func (v NullableAffiliateSeller202409SellerSearchSampleApplicationsFulfillmentsResponseDataFulfillments) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAffiliateSeller202409SellerSearchSampleApplicationsFulfillmentsResponseDataFulfillments) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


