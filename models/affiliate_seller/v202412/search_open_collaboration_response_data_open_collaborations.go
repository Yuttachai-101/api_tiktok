/*
tiktok shop openapi

sdk for apis

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package affiliate_seller_v202412

import (
    "encoding/json"
    "github.com/Yuttachai-101/api_tiktok/utils"
)

            // checks if the AffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborations type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &AffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborations{}

// AffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborations struct for AffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborations
type AffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborations struct {
    // This field indicates the number of creators who posted the LIve or Video from open collaboration.
    ContentCreatorCount *int64 `json:"content_creator_count,omitempty"`
    CurrentCommission *AffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborationsCurrentCommission `json:"current_commission,omitempty"`
    // The open collaboration id
    Id *string `json:"id,omitempty"`
    Product *AffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborationsProduct `json:"product,omitempty"`
    // This field indicates the number of creators who added the product to the showcase from open collaboration.
    ShowcaseCreatorCount *int64 `json:"showcase_creator_count,omitempty"`
    // Status of open collaboration.  Field values: - NORMALï¼šNORMAL means the current open collaboration status is normal and in effect. - TERMINATING: TERMINATING means that the merchant has removed open collaboration and the open collaboration will expire soon. The expiration time can be found at the end_time of current_commission. The open collaborations which were removed and expired will not be returned in the response.
    Status *string `json:"status,omitempty"`
}

// NewAffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborations instantiates a new AffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborations object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborations() *AffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborations {
    this := AffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborations{}
    return &this
}

// NewAffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborationsWithDefaults instantiates a new AffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborations object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborationsWithDefaults() *AffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborations {
    this := AffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborations{}
    return &this
}

// GetContentCreatorCount returns the ContentCreatorCount field value if set, zero value otherwise.
func (o *AffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborations) GetContentCreatorCount() int64 {
    if o == nil || utils.IsNil(o.ContentCreatorCount) {
        var ret int64
        return ret
    }
    return *o.ContentCreatorCount
}

// GetContentCreatorCountOk returns a tuple with the ContentCreatorCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborations) GetContentCreatorCountOk() (*int64, bool) {
    if o == nil || utils.IsNil(o.ContentCreatorCount) {
        return nil, false
    }
    return o.ContentCreatorCount, true
}

// HasContentCreatorCount returns a boolean if a field has been set.
func (o *AffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborations) HasContentCreatorCount() bool {
    if o != nil && !utils.IsNil(o.ContentCreatorCount) {
        return true
    }

    return false
}

// SetContentCreatorCount gets a reference to the given int64 and assigns it to the ContentCreatorCount field.
func (o *AffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborations) SetContentCreatorCount(v int64) {
    o.ContentCreatorCount = &v
}

// GetCurrentCommission returns the CurrentCommission field value if set, zero value otherwise.
func (o *AffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborations) GetCurrentCommission() AffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborationsCurrentCommission {
    if o == nil || utils.IsNil(o.CurrentCommission) {
        var ret AffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborationsCurrentCommission
        return ret
    }
    return *o.CurrentCommission
}

// GetCurrentCommissionOk returns a tuple with the CurrentCommission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborations) GetCurrentCommissionOk() (*AffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborationsCurrentCommission, bool) {
    if o == nil || utils.IsNil(o.CurrentCommission) {
        return nil, false
    }
    return o.CurrentCommission, true
}

// HasCurrentCommission returns a boolean if a field has been set.
func (o *AffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborations) HasCurrentCommission() bool {
    if o != nil && !utils.IsNil(o.CurrentCommission) {
        return true
    }

    return false
}

// SetCurrentCommission gets a reference to the given AffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborationsCurrentCommission and assigns it to the CurrentCommission field.
func (o *AffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborations) SetCurrentCommission(v AffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborationsCurrentCommission) {
    o.CurrentCommission = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborations) GetId() string {
    if o == nil || utils.IsNil(o.Id) {
        var ret string
        return ret
    }
    return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborations) GetIdOk() (*string, bool) {
    if o == nil || utils.IsNil(o.Id) {
        return nil, false
    }
    return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborations) HasId() bool {
    if o != nil && !utils.IsNil(o.Id) {
        return true
    }

    return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborations) SetId(v string) {
    o.Id = &v
}

// GetProduct returns the Product field value if set, zero value otherwise.
func (o *AffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborations) GetProduct() AffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborationsProduct {
    if o == nil || utils.IsNil(o.Product) {
        var ret AffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborationsProduct
        return ret
    }
    return *o.Product
}

// GetProductOk returns a tuple with the Product field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborations) GetProductOk() (*AffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborationsProduct, bool) {
    if o == nil || utils.IsNil(o.Product) {
        return nil, false
    }
    return o.Product, true
}

// HasProduct returns a boolean if a field has been set.
func (o *AffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborations) HasProduct() bool {
    if o != nil && !utils.IsNil(o.Product) {
        return true
    }

    return false
}

// SetProduct gets a reference to the given AffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborationsProduct and assigns it to the Product field.
func (o *AffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborations) SetProduct(v AffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborationsProduct) {
    o.Product = &v
}

// GetShowcaseCreatorCount returns the ShowcaseCreatorCount field value if set, zero value otherwise.
func (o *AffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborations) GetShowcaseCreatorCount() int64 {
    if o == nil || utils.IsNil(o.ShowcaseCreatorCount) {
        var ret int64
        return ret
    }
    return *o.ShowcaseCreatorCount
}

// GetShowcaseCreatorCountOk returns a tuple with the ShowcaseCreatorCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborations) GetShowcaseCreatorCountOk() (*int64, bool) {
    if o == nil || utils.IsNil(o.ShowcaseCreatorCount) {
        return nil, false
    }
    return o.ShowcaseCreatorCount, true
}

// HasShowcaseCreatorCount returns a boolean if a field has been set.
func (o *AffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborations) HasShowcaseCreatorCount() bool {
    if o != nil && !utils.IsNil(o.ShowcaseCreatorCount) {
        return true
    }

    return false
}

// SetShowcaseCreatorCount gets a reference to the given int64 and assigns it to the ShowcaseCreatorCount field.
func (o *AffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborations) SetShowcaseCreatorCount(v int64) {
    o.ShowcaseCreatorCount = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *AffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborations) GetStatus() string {
    if o == nil || utils.IsNil(o.Status) {
        var ret string
        return ret
    }
    return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborations) GetStatusOk() (*string, bool) {
    if o == nil || utils.IsNil(o.Status) {
        return nil, false
    }
    return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *AffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborations) HasStatus() bool {
    if o != nil && !utils.IsNil(o.Status) {
        return true
    }

    return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *AffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborations) SetStatus(v string) {
    o.Status = &v
}

func (o AffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborations) MarshalJSON() ([]byte, error) {
    toSerialize,err := o.ToMap()
    if err != nil {
        return []byte{}, err
    }
    return json.Marshal(toSerialize)
}

func (o AffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborations) ToMap() (map[string]interface{}, error) {
    toSerialize := map[string]interface{}{}
    if !utils.IsNil(o.ContentCreatorCount) {
        toSerialize["content_creator_count"] = o.ContentCreatorCount
    }
    if !utils.IsNil(o.CurrentCommission) {
        toSerialize["current_commission"] = o.CurrentCommission
    }
    if !utils.IsNil(o.Id) {
        toSerialize["id"] = o.Id
    }
    if !utils.IsNil(o.Product) {
        toSerialize["product"] = o.Product
    }
    if !utils.IsNil(o.ShowcaseCreatorCount) {
        toSerialize["showcase_creator_count"] = o.ShowcaseCreatorCount
    }
    if !utils.IsNil(o.Status) {
        toSerialize["status"] = o.Status
    }
    return toSerialize, nil
}

type NullableAffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborations struct {
	value *AffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborations
	isSet bool
}

func (v NullableAffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborations) Get() *AffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborations {
	return v.value
}

func (v *NullableAffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborations) Set(val *AffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborations) {
	v.value = val
	v.isSet = true
}

func (v NullableAffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborations) IsSet() bool {
	return v.isSet
}

func (v *NullableAffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborations) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborations(val *AffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborations) *NullableAffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborations {
	return &NullableAffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborations{value: val, isSet: true}
}

func (v NullableAffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborations) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAffiliateSeller202412SearchOpenCollaborationResponseDataOpenCollaborations) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


