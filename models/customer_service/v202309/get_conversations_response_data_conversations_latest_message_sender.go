/*
tiktok shop openapi

sdk for apis

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package customer_service_v202309

import (
    "encoding/json"
    "github.com/Yuttachai-101/api_tiktok/utils"
)

            // checks if the CustomerService202309GetConversationsResponseDataConversationsLatestMessageSender type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &CustomerService202309GetConversationsResponseDataConversationsLatestMessageSender{}

// CustomerService202309GetConversationsResponseDataConversationsLatestMessageSender struct for CustomerService202309GetConversationsResponseDataConversationsLatestMessageSender
type CustomerService202309GetConversationsResponseDataConversationsLatestMessageSender struct {
    // Sender's avatar URL. 
    Avatar *string `json:"avatar,omitempty"`
    // Sender's IM ID. Sender's unique identifier in TikTok Shop's IM system. 
    ImUserId *string `json:"im_user_id,omitempty"`
    // Sender's nickname. - For shops, the nickname is the shop's name.  - For customer service, the nickname is the customer service's name.  - For buyers, the nickname is the buyer's nickname on TikTok.  You can set the nicknames for shops and customer service agents on Seller Center.  
    Nickname *string `json:"nickname,omitempty"`
    // Sender's role. Possible enumerations: - `BUYER` - `SHOP` - `CUSTOMER_SERVICE` - `SYSTEM` - `ROBOT` For `SYSTEM` and `ROBOT` role, the value of `im_user_id`, `nickname`, and `avatar` are the same as those of the `SHOP` role.
    Role *string `json:"role,omitempty"`
}

// NewCustomerService202309GetConversationsResponseDataConversationsLatestMessageSender instantiates a new CustomerService202309GetConversationsResponseDataConversationsLatestMessageSender object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomerService202309GetConversationsResponseDataConversationsLatestMessageSender() *CustomerService202309GetConversationsResponseDataConversationsLatestMessageSender {
    this := CustomerService202309GetConversationsResponseDataConversationsLatestMessageSender{}
    return &this
}

// NewCustomerService202309GetConversationsResponseDataConversationsLatestMessageSenderWithDefaults instantiates a new CustomerService202309GetConversationsResponseDataConversationsLatestMessageSender object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomerService202309GetConversationsResponseDataConversationsLatestMessageSenderWithDefaults() *CustomerService202309GetConversationsResponseDataConversationsLatestMessageSender {
    this := CustomerService202309GetConversationsResponseDataConversationsLatestMessageSender{}
    return &this
}

// GetAvatar returns the Avatar field value if set, zero value otherwise.
func (o *CustomerService202309GetConversationsResponseDataConversationsLatestMessageSender) GetAvatar() string {
    if o == nil || utils.IsNil(o.Avatar) {
        var ret string
        return ret
    }
    return *o.Avatar
}

// GetAvatarOk returns a tuple with the Avatar field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerService202309GetConversationsResponseDataConversationsLatestMessageSender) GetAvatarOk() (*string, bool) {
    if o == nil || utils.IsNil(o.Avatar) {
        return nil, false
    }
    return o.Avatar, true
}

// HasAvatar returns a boolean if a field has been set.
func (o *CustomerService202309GetConversationsResponseDataConversationsLatestMessageSender) HasAvatar() bool {
    if o != nil && !utils.IsNil(o.Avatar) {
        return true
    }

    return false
}

// SetAvatar gets a reference to the given string and assigns it to the Avatar field.
func (o *CustomerService202309GetConversationsResponseDataConversationsLatestMessageSender) SetAvatar(v string) {
    o.Avatar = &v
}

// GetImUserId returns the ImUserId field value if set, zero value otherwise.
func (o *CustomerService202309GetConversationsResponseDataConversationsLatestMessageSender) GetImUserId() string {
    if o == nil || utils.IsNil(o.ImUserId) {
        var ret string
        return ret
    }
    return *o.ImUserId
}

// GetImUserIdOk returns a tuple with the ImUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerService202309GetConversationsResponseDataConversationsLatestMessageSender) GetImUserIdOk() (*string, bool) {
    if o == nil || utils.IsNil(o.ImUserId) {
        return nil, false
    }
    return o.ImUserId, true
}

// HasImUserId returns a boolean if a field has been set.
func (o *CustomerService202309GetConversationsResponseDataConversationsLatestMessageSender) HasImUserId() bool {
    if o != nil && !utils.IsNil(o.ImUserId) {
        return true
    }

    return false
}

// SetImUserId gets a reference to the given string and assigns it to the ImUserId field.
func (o *CustomerService202309GetConversationsResponseDataConversationsLatestMessageSender) SetImUserId(v string) {
    o.ImUserId = &v
}

// GetNickname returns the Nickname field value if set, zero value otherwise.
func (o *CustomerService202309GetConversationsResponseDataConversationsLatestMessageSender) GetNickname() string {
    if o == nil || utils.IsNil(o.Nickname) {
        var ret string
        return ret
    }
    return *o.Nickname
}

// GetNicknameOk returns a tuple with the Nickname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerService202309GetConversationsResponseDataConversationsLatestMessageSender) GetNicknameOk() (*string, bool) {
    if o == nil || utils.IsNil(o.Nickname) {
        return nil, false
    }
    return o.Nickname, true
}

// HasNickname returns a boolean if a field has been set.
func (o *CustomerService202309GetConversationsResponseDataConversationsLatestMessageSender) HasNickname() bool {
    if o != nil && !utils.IsNil(o.Nickname) {
        return true
    }

    return false
}

// SetNickname gets a reference to the given string and assigns it to the Nickname field.
func (o *CustomerService202309GetConversationsResponseDataConversationsLatestMessageSender) SetNickname(v string) {
    o.Nickname = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *CustomerService202309GetConversationsResponseDataConversationsLatestMessageSender) GetRole() string {
    if o == nil || utils.IsNil(o.Role) {
        var ret string
        return ret
    }
    return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerService202309GetConversationsResponseDataConversationsLatestMessageSender) GetRoleOk() (*string, bool) {
    if o == nil || utils.IsNil(o.Role) {
        return nil, false
    }
    return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *CustomerService202309GetConversationsResponseDataConversationsLatestMessageSender) HasRole() bool {
    if o != nil && !utils.IsNil(o.Role) {
        return true
    }

    return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *CustomerService202309GetConversationsResponseDataConversationsLatestMessageSender) SetRole(v string) {
    o.Role = &v
}

func (o CustomerService202309GetConversationsResponseDataConversationsLatestMessageSender) MarshalJSON() ([]byte, error) {
    toSerialize,err := o.ToMap()
    if err != nil {
        return []byte{}, err
    }
    return json.Marshal(toSerialize)
}

func (o CustomerService202309GetConversationsResponseDataConversationsLatestMessageSender) ToMap() (map[string]interface{}, error) {
    toSerialize := map[string]interface{}{}
    if !utils.IsNil(o.Avatar) {
        toSerialize["avatar"] = o.Avatar
    }
    if !utils.IsNil(o.ImUserId) {
        toSerialize["im_user_id"] = o.ImUserId
    }
    if !utils.IsNil(o.Nickname) {
        toSerialize["nickname"] = o.Nickname
    }
    if !utils.IsNil(o.Role) {
        toSerialize["role"] = o.Role
    }
    return toSerialize, nil
}

type NullableCustomerService202309GetConversationsResponseDataConversationsLatestMessageSender struct {
	value *CustomerService202309GetConversationsResponseDataConversationsLatestMessageSender
	isSet bool
}

func (v NullableCustomerService202309GetConversationsResponseDataConversationsLatestMessageSender) Get() *CustomerService202309GetConversationsResponseDataConversationsLatestMessageSender {
	return v.value
}

func (v *NullableCustomerService202309GetConversationsResponseDataConversationsLatestMessageSender) Set(val *CustomerService202309GetConversationsResponseDataConversationsLatestMessageSender) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomerService202309GetConversationsResponseDataConversationsLatestMessageSender) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomerService202309GetConversationsResponseDataConversationsLatestMessageSender) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomerService202309GetConversationsResponseDataConversationsLatestMessageSender(val *CustomerService202309GetConversationsResponseDataConversationsLatestMessageSender) *NullableCustomerService202309GetConversationsResponseDataConversationsLatestMessageSender {
	return &NullableCustomerService202309GetConversationsResponseDataConversationsLatestMessageSender{value: val, isSet: true}
}

func (v NullableCustomerService202309GetConversationsResponseDataConversationsLatestMessageSender) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomerService202309GetConversationsResponseDataConversationsLatestMessageSender) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


