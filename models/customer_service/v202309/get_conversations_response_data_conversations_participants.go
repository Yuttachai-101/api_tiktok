/*
tiktok shop openapi

sdk for apis

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package customer_service_v202309

import (
    "encoding/json"
    "github.com/Yuttachai-101/api_tiktok/utils"
)

            // checks if the CustomerService202309GetConversationsResponseDataConversationsParticipants type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &CustomerService202309GetConversationsResponseDataConversationsParticipants{}

// CustomerService202309GetConversationsResponseDataConversationsParticipants struct for CustomerService202309GetConversationsResponseDataConversationsParticipants
type CustomerService202309GetConversationsResponseDataConversationsParticipants struct {
    // Participant's avatar URL. 
    Avatar *string `json:"avatar,omitempty"`
    // Which platform is the buyer from.  This field will only be returned when the role is `BUYER` and the region is Indonesia. Possible enumerations: - TIKTOK_SHOP - TOKOPEDIA You cannot send platform-specific content to the buyer from a different platform. For example, when you send a product card to the Tokopedia buyer, you must ensure the product is listed on Tokopedia.
    BuyerPlatform *string `json:"buyer_platform,omitempty"`
    // Participant's ID, in IM system. This ID is used in IM system and can not be used to query orders. To query orders, use `user_id` instead.
    ImUserId *string `json:"im_user_id,omitempty"`
    // Participant's nickname.
    Nickname *string `json:"nickname,omitempty"`
    // Participant's role. Possible enumerations: - `BUYER` - `SHOP` - `CUSTOMER_SERVICE`
    Role *string `json:"role,omitempty"`
    // Participant's ID.
    UserId *string `json:"user_id,omitempty"`
}

// NewCustomerService202309GetConversationsResponseDataConversationsParticipants instantiates a new CustomerService202309GetConversationsResponseDataConversationsParticipants object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomerService202309GetConversationsResponseDataConversationsParticipants() *CustomerService202309GetConversationsResponseDataConversationsParticipants {
    this := CustomerService202309GetConversationsResponseDataConversationsParticipants{}
    return &this
}

// NewCustomerService202309GetConversationsResponseDataConversationsParticipantsWithDefaults instantiates a new CustomerService202309GetConversationsResponseDataConversationsParticipants object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomerService202309GetConversationsResponseDataConversationsParticipantsWithDefaults() *CustomerService202309GetConversationsResponseDataConversationsParticipants {
    this := CustomerService202309GetConversationsResponseDataConversationsParticipants{}
    return &this
}

// GetAvatar returns the Avatar field value if set, zero value otherwise.
func (o *CustomerService202309GetConversationsResponseDataConversationsParticipants) GetAvatar() string {
    if o == nil || utils.IsNil(o.Avatar) {
        var ret string
        return ret
    }
    return *o.Avatar
}

// GetAvatarOk returns a tuple with the Avatar field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerService202309GetConversationsResponseDataConversationsParticipants) GetAvatarOk() (*string, bool) {
    if o == nil || utils.IsNil(o.Avatar) {
        return nil, false
    }
    return o.Avatar, true
}

// HasAvatar returns a boolean if a field has been set.
func (o *CustomerService202309GetConversationsResponseDataConversationsParticipants) HasAvatar() bool {
    if o != nil && !utils.IsNil(o.Avatar) {
        return true
    }

    return false
}

// SetAvatar gets a reference to the given string and assigns it to the Avatar field.
func (o *CustomerService202309GetConversationsResponseDataConversationsParticipants) SetAvatar(v string) {
    o.Avatar = &v
}

// GetBuyerPlatform returns the BuyerPlatform field value if set, zero value otherwise.
func (o *CustomerService202309GetConversationsResponseDataConversationsParticipants) GetBuyerPlatform() string {
    if o == nil || utils.IsNil(o.BuyerPlatform) {
        var ret string
        return ret
    }
    return *o.BuyerPlatform
}

// GetBuyerPlatformOk returns a tuple with the BuyerPlatform field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerService202309GetConversationsResponseDataConversationsParticipants) GetBuyerPlatformOk() (*string, bool) {
    if o == nil || utils.IsNil(o.BuyerPlatform) {
        return nil, false
    }
    return o.BuyerPlatform, true
}

// HasBuyerPlatform returns a boolean if a field has been set.
func (o *CustomerService202309GetConversationsResponseDataConversationsParticipants) HasBuyerPlatform() bool {
    if o != nil && !utils.IsNil(o.BuyerPlatform) {
        return true
    }

    return false
}

// SetBuyerPlatform gets a reference to the given string and assigns it to the BuyerPlatform field.
func (o *CustomerService202309GetConversationsResponseDataConversationsParticipants) SetBuyerPlatform(v string) {
    o.BuyerPlatform = &v
}

// GetImUserId returns the ImUserId field value if set, zero value otherwise.
func (o *CustomerService202309GetConversationsResponseDataConversationsParticipants) GetImUserId() string {
    if o == nil || utils.IsNil(o.ImUserId) {
        var ret string
        return ret
    }
    return *o.ImUserId
}

// GetImUserIdOk returns a tuple with the ImUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerService202309GetConversationsResponseDataConversationsParticipants) GetImUserIdOk() (*string, bool) {
    if o == nil || utils.IsNil(o.ImUserId) {
        return nil, false
    }
    return o.ImUserId, true
}

// HasImUserId returns a boolean if a field has been set.
func (o *CustomerService202309GetConversationsResponseDataConversationsParticipants) HasImUserId() bool {
    if o != nil && !utils.IsNil(o.ImUserId) {
        return true
    }

    return false
}

// SetImUserId gets a reference to the given string and assigns it to the ImUserId field.
func (o *CustomerService202309GetConversationsResponseDataConversationsParticipants) SetImUserId(v string) {
    o.ImUserId = &v
}

// GetNickname returns the Nickname field value if set, zero value otherwise.
func (o *CustomerService202309GetConversationsResponseDataConversationsParticipants) GetNickname() string {
    if o == nil || utils.IsNil(o.Nickname) {
        var ret string
        return ret
    }
    return *o.Nickname
}

// GetNicknameOk returns a tuple with the Nickname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerService202309GetConversationsResponseDataConversationsParticipants) GetNicknameOk() (*string, bool) {
    if o == nil || utils.IsNil(o.Nickname) {
        return nil, false
    }
    return o.Nickname, true
}

// HasNickname returns a boolean if a field has been set.
func (o *CustomerService202309GetConversationsResponseDataConversationsParticipants) HasNickname() bool {
    if o != nil && !utils.IsNil(o.Nickname) {
        return true
    }

    return false
}

// SetNickname gets a reference to the given string and assigns it to the Nickname field.
func (o *CustomerService202309GetConversationsResponseDataConversationsParticipants) SetNickname(v string) {
    o.Nickname = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *CustomerService202309GetConversationsResponseDataConversationsParticipants) GetRole() string {
    if o == nil || utils.IsNil(o.Role) {
        var ret string
        return ret
    }
    return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerService202309GetConversationsResponseDataConversationsParticipants) GetRoleOk() (*string, bool) {
    if o == nil || utils.IsNil(o.Role) {
        return nil, false
    }
    return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *CustomerService202309GetConversationsResponseDataConversationsParticipants) HasRole() bool {
    if o != nil && !utils.IsNil(o.Role) {
        return true
    }

    return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *CustomerService202309GetConversationsResponseDataConversationsParticipants) SetRole(v string) {
    o.Role = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *CustomerService202309GetConversationsResponseDataConversationsParticipants) GetUserId() string {
    if o == nil || utils.IsNil(o.UserId) {
        var ret string
        return ret
    }
    return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerService202309GetConversationsResponseDataConversationsParticipants) GetUserIdOk() (*string, bool) {
    if o == nil || utils.IsNil(o.UserId) {
        return nil, false
    }
    return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *CustomerService202309GetConversationsResponseDataConversationsParticipants) HasUserId() bool {
    if o != nil && !utils.IsNil(o.UserId) {
        return true
    }

    return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *CustomerService202309GetConversationsResponseDataConversationsParticipants) SetUserId(v string) {
    o.UserId = &v
}

func (o CustomerService202309GetConversationsResponseDataConversationsParticipants) MarshalJSON() ([]byte, error) {
    toSerialize,err := o.ToMap()
    if err != nil {
        return []byte{}, err
    }
    return json.Marshal(toSerialize)
}

func (o CustomerService202309GetConversationsResponseDataConversationsParticipants) ToMap() (map[string]interface{}, error) {
    toSerialize := map[string]interface{}{}
    if !utils.IsNil(o.Avatar) {
        toSerialize["avatar"] = o.Avatar
    }
    if !utils.IsNil(o.BuyerPlatform) {
        toSerialize["buyer_platform"] = o.BuyerPlatform
    }
    if !utils.IsNil(o.ImUserId) {
        toSerialize["im_user_id"] = o.ImUserId
    }
    if !utils.IsNil(o.Nickname) {
        toSerialize["nickname"] = o.Nickname
    }
    if !utils.IsNil(o.Role) {
        toSerialize["role"] = o.Role
    }
    if !utils.IsNil(o.UserId) {
        toSerialize["user_id"] = o.UserId
    }
    return toSerialize, nil
}

type NullableCustomerService202309GetConversationsResponseDataConversationsParticipants struct {
	value *CustomerService202309GetConversationsResponseDataConversationsParticipants
	isSet bool
}

func (v NullableCustomerService202309GetConversationsResponseDataConversationsParticipants) Get() *CustomerService202309GetConversationsResponseDataConversationsParticipants {
	return v.value
}

func (v *NullableCustomerService202309GetConversationsResponseDataConversationsParticipants) Set(val *CustomerService202309GetConversationsResponseDataConversationsParticipants) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomerService202309GetConversationsResponseDataConversationsParticipants) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomerService202309GetConversationsResponseDataConversationsParticipants) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomerService202309GetConversationsResponseDataConversationsParticipants(val *CustomerService202309GetConversationsResponseDataConversationsParticipants) *NullableCustomerService202309GetConversationsResponseDataConversationsParticipants {
	return &NullableCustomerService202309GetConversationsResponseDataConversationsParticipants{value: val, isSet: true}
}

func (v NullableCustomerService202309GetConversationsResponseDataConversationsParticipants) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomerService202309GetConversationsResponseDataConversationsParticipants) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


