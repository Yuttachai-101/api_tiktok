/*
tiktok shop openapi

Testing AffiliatePartnerV202405APIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package sdk_golang

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "tiktokshop/open/sdk_golang/apis"
)

func Test_sdk_golang_AffiliatePartnerV202405APIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test AffiliatePartnerV202405APIService AffiliatePartner202405CampaignsCampaignIdGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var campaignId string

		resp, httpRes, err := apiClient.AffiliatePartnerV202405API.AffiliatePartner202405CampaignsCampaignIdGet(context.Background(), campaignId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AffiliatePartnerV202405APIService AffiliatePartner202405CampaignsCampaignIdPartialEditPost", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var campaignId string

		resp, httpRes, err := apiClient.AffiliatePartnerV202405API.AffiliatePartner202405CampaignsCampaignIdPartialEditPost(context.Background(), campaignId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AffiliatePartnerV202405APIService AffiliatePartner202405CampaignsCampaignIdProductsGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var campaignId string

		resp, httpRes, err := apiClient.AffiliatePartnerV202405API.AffiliatePartner202405CampaignsCampaignIdProductsGet(context.Background(), campaignId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AffiliatePartnerV202405APIService AffiliatePartner202405CampaignsCampaignIdProductsProductIdPromotionLinkGeneratePost", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var campaignId string
		var productId string

		resp, httpRes, err := apiClient.AffiliatePartnerV202405API.AffiliatePartner202405CampaignsCampaignIdProductsProductIdPromotionLinkGeneratePost(context.Background(), campaignId, productId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AffiliatePartnerV202405APIService AffiliatePartner202405CampaignsCampaignIdProductsProductIdReviewPost", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var campaignId string
		var productId string

		resp, httpRes, err := apiClient.AffiliatePartnerV202405API.AffiliatePartner202405CampaignsCampaignIdProductsProductIdReviewPost(context.Background(), campaignId, productId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AffiliatePartnerV202405APIService AffiliatePartner202405CampaignsCampaignIdPublishPost", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var campaignId string

		resp, httpRes, err := apiClient.AffiliatePartnerV202405API.AffiliatePartner202405CampaignsCampaignIdPublishPost(context.Background(), campaignId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AffiliatePartnerV202405APIService AffiliatePartner202405CampaignsGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.AffiliatePartnerV202405API.AffiliatePartner202405CampaignsGet(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AffiliatePartnerV202405APIService AffiliatePartner202405CampaignsPost", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.AffiliatePartnerV202405API.AffiliatePartner202405CampaignsPost(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
